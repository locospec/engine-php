<?php

namespace LCSEngine\Schemas\Model\Aggregates;

class GroupByField
{
    protected string $source;

    protected string $name;

    protected bool $isAutoGenerated = false;

    public function __construct(string $source, ?string $name = null)
    {
        $this->source = $source;

        // Auto-generate alias if not provided
        if ($name === null) {
            // Extract the last part after the last dot
            $parts = explode('.', $source);
            $this->name = end($parts);
            $this->isAutoGenerated = true;
        } else {
            $this->name = $name;
            $this->isAutoGenerated = false;
        }
    }

    public function getSource(): string
    {
        return $this->source;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): void
    {
        $this->name = $name;
        $this->isAutoGenerated = false;
    }

    public function isAutoGenerated(): bool
    {
        return $this->isAutoGenerated;
    }

    /**
     * Create from array or string
     *
     * @param  array|string  $data
     */
    public static function fromArray($data): self
    {
        if (is_string($data)) {
            return new self($data);
        }

        return new self(
            $data['source'],
            $data['name'] ?? null
        );
    }

    public function toArray(): array
    {
        return [
            'source' => $this->source,
            'name' => $this->name,
        ];
    }
}
